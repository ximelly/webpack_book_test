const MiniCssExtractPlugin = require("mini-css-extract-plugin")

module.exports={
    mode:"development",
    entry:"./src/index.js",
    output:{
        filename:"bundle.js",
        publicPath:"./asserts/"//静态资源的输出路径
    },
    module:{
        rules:[{
            test:/\.js$/,
            enforce:'pre',
            exclude:/node_modules/,
            use:[{
                loader:"babel-loader",
                options:{
                    cacheDirectory:true,
                    presets:[['@babel/preset-env',
                        {
                            modules:false
                        }
                    ]]
                }
            },"eslint-loader"]
        },{
            test:/\.(png|jpg)$/,
            use:[
                {
                    loader:'url-loader',
                    options:{
                        limit:10240,
                        name:'[name].[ext]'
                    }
                }]
        },{
            test:/\.css$/,
            use:[{
                loader:MiniCssExtractPlugin.loader,
                options:{
                    publicPath:"../",//指定异步CSS的加载路径
                }
            },{
                loader:"css-loader",
                options:{
                    sourceMap:true
                }
            },"postcss-loader"]
        },{
            test:/\.scss$/,
            use:[{
                loader:MiniCssExtractPlugin.loader,
                options:{
                    publicPath:"../"//指定异步CSS的加载路径
                }
            },{
                loader:"css-loader",
                options:{
                    sourceMap:true
                }
            },{
                loader:"sass-loader",
                options:{
                    sourceMap:true
                }
            }]
        },{
            test:/\.vue$/,
            use:"vue-loader"
        }]
    },
    devServer:{
        publicPath:"/dist"//指定webpack-dev-server的静态资源服务路径
    },
    plugins:[
        new MiniCssExtractPlugin({
            filename:"[name].css",//同步加载的CSS资源名
            chunkFilename:"[id].css"//异步加载的CSS资源名
        })
    ]
}